name: Claude Code

on:
  issue_comment:
    types: [created]
  pull_request_review_comment:
    types: [created]
  issues:
    types: [opened, assigned]
  pull_request_review:
    types: [submitted]

jobs:
  claude:
    if: |
      (github.event_name == 'issue_comment' && contains(github.event.comment.body, '@claude')) ||
      (github.event_name == 'pull_request_review_comment' && contains(github.event.comment.body, '@claude')) ||
      (github.event_name == 'pull_request_review' && contains(github.event.review.body, '@claude')) ||
      (github.event_name == 'issues' && (contains(github.event.issue.body, '@claude') || contains(github.event.issue.title, '@claude')))
    runs-on: ubuntu-latest
    permissions:
      contents: read
      pull-requests: read
      issues: read
      id-token: write
      actions: read # Required for Claude to read CI results on PRs
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 1

      - name: Run Claude Code
        id: claude
        uses: anthropics/claude-code-action@beta
        with:
          claude_code_oauth_token: ${{ secrets.CLAUDE_CODE_OAUTH_TOKEN }}

          # This is an optional setting that allows Claude to read CI results on PRs
          additional_permissions: |
            actions: read
          
          # Optional: Specify model (defaults to Claude Sonnet 4, uncomment for Claude Opus 4)
          # model: "claude-opus-4-20250514"
          
          # Optional: Customize the trigger phrase (default: @claude)
          # trigger_phrase: "/claude"
          
          # Optional: Trigger when specific user is assigned to an issue
          # assignee_trigger: "claude-bot"
          
          # Optional: Allow Claude to run specific commands
          allowed_tools: "Bash(npm install),Bash(npm run build),Bash(npm run test:*),Bash(npm run lint:*),Bash(npx playwright test*),Bash(npm test*)"
          
          # Optional: Add custom instructions for Claude to customize its behavior for your project
          custom_instructions: |
            # Playwright テスト自動修正
            
            このプロジェクトでPlaywrightテストに関連する作業を依頼された場合は、以下の手順に従ってください：
            
            1. まず `npx playwright test` でテストを実行してください
            2. エラーが発生した場合は、エラーメッセージを詳細に分析してください
            3. エラーの原因を特定し、適切な修正を行ってください
            4. 修正後、必ず再度テストを実行してください
            5. すべてのテストが成功するまで、手順1-4を繰り返してください
            
            ただし、以下の場合は修正を中止して報告してください：
            - 同じエラーが3回連続で発生した場合
            - 修正試行が合計5回を超えた場合
            - 根本的に解決不可能と判断した場合
            
            テスト修正時の注意事項：
            - セレクターの正確性を確認
            - 適切な待機処理（waitForSelector, waitForLoadState等）を使用
            - タイムアウト値を必要に応じて調整
            - テストの意図を理解し、根本的な問題を解決
            - 同じ修正を繰り返さないよう、試した内容を記録
            
            修正を中止する場合は、試した内容と解決できなかった理由を詳細に報告してください。
            詳細な手順は .github/claude-prompts/playwright-test-fix.md を参照してください。
          
          # Optional: Custom environment variables for Claude
          # claude_env: |
          #   NODE_ENV: test

